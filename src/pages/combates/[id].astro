---
import type { GetStaticPaths } from 'astro'

import { COMBATS } from '@/consts/combats'
import { countries } from '@/consts/countries'
import { FIGHTERS } from '@/consts/fighters'
import { combate } from '@/consts/pageTitles'
import Layout from '@/layouts/Layout.astro'
import PredictionBar from '@/components/PredictionBar.astro'
import BoxerCard from '@/components/BoxerCard.astro'

const { id } = Astro.params
const combat = COMBATS.find((c) => c.id === id)
if (!combat) return Astro.redirect('/404')
const fighter1 = FIGHTERS.find((f) => f.id === combat?.fighters[0])
const fighter2 = FIGHTERS.find((f) => f.id === combat?.fighters[1])

// Descripción dinámica
const description = `Combate entre ${fighter1?.name} y ${fighter2?.name} en La Velada del Año V de Ibai Llanos.`

// Canonical dinámico
const canonical = `https://www.infolavelada.com/combates/${id}`

const fighter1Country = countries.find((c) => c.id === fighter1?.country)
const fighter2Country = countries.find((c) => c.id === fighter2?.country)

export const getStaticPaths = (() => {
  return COMBATS.map((c) => ({
    params: { id: c.id },
  }))
}) satisfies GetStaticPaths

export const prerender = true
---

<Layout
  title={combate(fighter1?.name, fighter2?.name)}
  description={description}
  canonical={canonical}
>
  <div
    class="mask-fade-bottom absolute inset-0 w-full bg-[url('/images/hero.avif')] bg-cover bg-center"
  >
  </div>

  <section class="relative mx-auto mt-24 min-h-screen max-w-6xl p-6">
    <!-- Cartelera -->
    <div class="relative -mt-10 flex h-full w-full p-2">
      <!-- Primer Combatiente -->
      <div class="relative h-auto w-1/2 overflow-hidden duration-200 hover:scale-105">
        <a
          class="flex h-full w-full items-center justify-center pb-8"
          href={`/luchador/${fighter1?.id}`}
        >
          <img
            src={`/images/fighters/combat/${fighter1?.id}.webp`}
            alt={`Imagen de ${fighter1?.name}`}
            class="mask-fade-bottom max-h-[80vh] w-full object-contain"
            transition:name={`combat-img:${fighter1?.id}`}
          />
        </a>
      </div>

      <!-- Versus Letra o Imagen -->
      <img
        src={`/images/fighters/combat/${fighter1?.id}-vs-${fighter2?.id}.webp`}
        class="transform-3d pointer-events-none absolute left-1/2 top-1/2 z-50 h-auto w-[500px] -translate-x-1/2 -translate-y-1/2 opacity-[99%]"
        alt="Imagen de Versus"
        transition:name={`vs:${fighter1?.id}-${fighter2?.id}`}
      />

      <!-- Segundo Combatiente -->
      <div class="relative h-auto w-1/2 overflow-hidden duration-200 hover:scale-105">
        <!-- Esquina Derecha -->

        <a
          class="flex h-full w-full items-center justify-center"
          href={`/luchador/${fighter2?.id}`}
        >
          <img
            src={`/images/fighters/combat/${fighter2?.id}.webp`}
            alt={`Imagen de ${fighter2?.name}`}
            class="mask-fade-bottom max-h-[80vh] w-full object-contain"
            transition:name={`combat-img:${fighter2?.id}`}
          />
        </a>
      </div>
      <!-- Barra de Predicción Overlay -->
      <PredictionBar
        overlay={true}
        fighter1={{
          id: fighter1?.id || '',
          name: fighter1?.name || '',
          percentage: 60,
        }}
        fighter2={{
          id: fighter2?.id || '',
          name: fighter2?.name || '',
          percentage: 40,
        }}
        totalVotes={100}
      />
    </div>

    <!-- Informacion -->
    <div class="mx-auto mt-16 flex w-full max-w-2xl flex-col gap-8 p-3">
      <!-- Caracteristicas -->
      <div>
        <div class="my-8 grid grid-cols-3 gap-4">
          <!-- Columna del primer luchador -->
          <div class="group flex flex-col items-center space-y-4">
            <!-- Foto del luchador -->
            <div class="flex justify-center">
              <BoxerCard id={fighter1?.id || ''} name={fighter1?.name || ''} versus="" />
            </div>
            <!-- Características -->
            <div class="space-y-2 text-center text-sm font-bold text-black md:text-xl">
              <p>{fighter1?.age} años</p>
              <p>{fighter1?.height} mts</p>
              <p>{fighter1?.weight} kg</p>
              <p>{fighter1Country?.name.toLocaleLowerCase()}</p>
              <img
                src={fighter1Country?.image.src}
                alt={`Bandera de ${fighter1Country?.name ?? 'Desconocido'}`}
                class="md:w-25 inline-flex h-auto w-16"
              />
            </div>
          </div>

          <!-- Columna central con etiquetas -->
          <div class="flex flex-col items-center space-y-4">
            <!-- Espacio para mantener alineación -->
            <div class="h-24 md:h-32"></div>
            <!-- Etiquetas -->
            <div class="space-y-2 text-center text-sm text-black opacity-70 md:text-xl">
              <p>EDAD</p>
              <p>ALTURA</p>
              <p>PESO</p>
              <p>PAÍS</p>
            </div>
          </div>

          <!-- Columna del segundo luchador -->
          <div class="group flex flex-col items-center space-y-4">
            <!-- Foto del luchador -->
            <div class="flex justify-center">
              <BoxerCard id={fighter2?.id || ''} name={fighter2?.name || ''} versus="" class="" />
            </div>
            <!-- Características -->
            <div class="space-y-2 text-center text-sm font-bold text-black md:text-xl">
              <p>{fighter2?.age} años</p>
              <p>{fighter2?.height} mts</p>
              <p>{fighter2?.weight} kg</p>
              <p>{fighter2Country?.name.toLocaleLowerCase()}</p>
              <img
                src={fighter2Country?.image.src}
                alt={`Bandera de ${fighter2Country?.name ?? 'Desconocido'}`}
                class="md:w-25 inline-flex h-auto w-16"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  <style>
    .custom-clip {
      clip-path: polygon(15% 0%, 100% 0%, 100% 100%, 0% 100%);
    }

    .vertical-text {
      writing-mode: vertical-lr;
      text-orientation: upright;
    }

    .animate-crash {
      animation: crash 1s linear forwards;
    }

    @keyframes crash {
      0% {
        transform: translateX(100px);
        box-shadow: 0 0 0 rgba(255, 255, 255, 0); /* Sin sombra */
        opacity: 0;
      }
      40% {
        transform: translateX(-10px);
        box-shadow: 10px 0 20px rgba(255, 255, 255, 0.6); /* Sombra visible más intensa */
        opacity: 1;
      }
      60% {
        transform: translateX(50px);
        box-shadow: 10px 0 20px rgba(255, 255, 255, 0.6); /* Mantener sombra */
      }
      80% {
        transform: translateX(0);
        box-shadow: 10px 0 20px rgba(255, 255, 255, 0.6); /* Mantener sombra */
      }
      100% {
        transform: translateX(-10px);
        box-shadow: 10px 0 20px rgba(255, 255, 255, 0.6); /* Mantener sombra */
      }
    }
  </style>
</Layout>
